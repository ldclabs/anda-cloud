type AssetInfo = record {
  decimals : nat8;
  transfer_fee : nat;
  payment_fee : nat;
  symbol : text;
};
type CanisterArgs = variant { Upgrade : UpgradeArgs; Init : InitArgs };
type InitArgs = record { governance_canister : opt principal; name : text };
type PaymentLogInfo = record {
  id : nat64;
  to : principal;
  fee : text;
  asset : principal;
  value : text;
  scheme : Scheme;
  from : principal;
  nonce : nat64;
  timestamp : nat64;
  expires_at : nat64;
};
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : nat; Err : text };
type Result_2 = variant { Ok : State; Err : text };
type Result_3 = variant { Ok : vec PaymentLogInfo; Err : text };
type Result_4 = variant { Ok : nat64; Err : text };
type Result_5 = variant { Ok : text; Err : text };
type Scheme = variant { Exact; Upto };
type State = record {
  total_withdrawn_fees : vec record { principal; nat };
  supported_payments : vec SupportedPaymentKind;
  total_collected_fees : vec record { principal; nat };
  governance_canister : opt principal;
  name : text;
  supported_assets : vec record { principal; AssetInfo };
};
type SupportedPaymentKind = record {
  scheme : Scheme;
  network : text;
  x402_version : X402Version;
};
type UpgradeArgs = record {
  governance_canister : opt principal;
  name : opt text;
};
type X402Version = variant { V1 };
service : (opt CanisterArgs) -> {
  admin_add_supported_payment : (X402Version, Scheme) -> (Result);
  admin_collect_fees : (principal, principal, nat) -> (Result_1);
  admin_remove_supported_asset : (principal) -> (Result);
  admin_remove_supported_payment : (X402Version, Scheme) -> (Result);
  admin_update_supported_asset : (principal, nat) -> (Result);
  info : () -> (Result_2) query;
  my_payment_logs : (nat32, opt nat64) -> (Result_3) query;
  next_nonce : () -> (Result_4) query;
  validate_admin_add_supported_payment : (X402Version, Scheme) -> (Result_5);
  validate_admin_collect_fees : (principal, principal, nat) -> (Result_5);
  validate_admin_remove_supported_payment : (X402Version, Scheme) -> (Result_5);
  validate_admin_update_supported_asset : (principal, nat) -> (Result_5);
  validate_remove_update_supported_asset : (principal) -> (Result_5);
}
